{"ast":null,"code":"import http from \"../http-common\";\nimport authHeader from \"./auth.header\";\n\nclass NewsDataService {\n  getAll() {\n    return http.get(\"/news\", {\n      headers: authHeader()\n    });\n  }\n\n  get(id) {\n    return http.get(`/news/${id}`, {\n      headers: authHeader()\n    });\n  }\n\n  create(data) {\n    return http.post(\"/news/add\", data, {\n      headers: authHeader()\n    });\n  }\n\n  update(id, data) {\n    return http.put(`/update/${id}`, data, {\n      headers: authHeader()\n    });\n  }\n\n  delete(id) {\n    return http.delete(`/delete/${id}`, {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new NewsDataService();","map":{"version":3,"sources":["/Users/Bakhtiyar/IdeaProjects/NewProject/news-portal-front/src/services/news.service.js"],"names":["http","authHeader","NewsDataService","getAll","get","headers","id","create","data","post","update","put","delete"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,MAAM,GAAG;AACL,WAAOH,IAAI,CAACI,GAAL,CAAS,OAAT,EAAkB;AAAEC,MAAAA,OAAO,EAAEJ,UAAU;AAArB,KAAlB,CAAP;AACH;;AAEDG,EAAAA,GAAG,CAACE,EAAD,EAAK;AACJ,WAAON,IAAI,CAACI,GAAL,CAAU,SAAQE,EAAG,EAArB,EAAwB;AAAED,MAAAA,OAAO,EAAEJ,UAAU;AAArB,KAAxB,CAAP;AACH;;AAEDM,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAOR,IAAI,CAACS,IAAL,CAAU,WAAV,EAAuBD,IAAvB,EAA6B;AAAEH,MAAAA,OAAO,EAAEJ,UAAU;AAArB,KAA7B,CAAP;AACH;;AAEDS,EAAAA,MAAM,CAACJ,EAAD,EAAKE,IAAL,EAAW;AACb,WAAOR,IAAI,CAACW,GAAL,CAAU,WAAUL,EAAG,EAAvB,EAA0BE,IAA1B,EAAgC;AAAEH,MAAAA,OAAO,EAAEJ,UAAU;AAArB,KAAhC,CAAP;AACH;;AAEDW,EAAAA,MAAM,CAACN,EAAD,EAAK;AACP,WAAON,IAAI,CAACY,MAAL,CAAa,WAAUN,EAAG,EAA1B,EAA6B;AAAED,MAAAA,OAAO,EAAEJ,UAAU;AAArB,KAA7B,CAAP;AACH;;AAnBiB;;AAsBtB,eAAe,IAAIC,eAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\nimport authHeader from \"./auth.header\";\n\nclass NewsDataService {\n    getAll() {\n        return http.get(\"/news\", { headers: authHeader() });\n    }\n\n    get(id) {\n        return http.get(`/news/${id}`, { headers: authHeader() });\n    }\n\n    create(data) {\n        return http.post(\"/news/add\", data, { headers: authHeader() });\n    }\n\n    update(id, data) {\n        return http.put(`/update/${id}`, data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/delete/${id}`, { headers: authHeader() });\n    }\n}\n\nexport default new NewsDataService();\n"]},"metadata":{},"sourceType":"module"}