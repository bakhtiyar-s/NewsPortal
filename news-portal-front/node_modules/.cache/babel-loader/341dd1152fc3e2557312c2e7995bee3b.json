{"ast":null,"code":"import React, { Component } from \"react\";\nimport NewsDataService from \"../services/news.service\";\nimport { Link } from \"react-router-dom\";\nexport default class NewsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveNews = this.retrieveNews.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveTutorials();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll().then(response => {\n      this.setState({\n        tutorials: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll().then(response => {\n      console.log(response.data);\n      this.refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  searchTitle() {\n    TutorialDataService.findByTitle(this.state.searchTitle).then(response => {\n      this.setState({\n        tutorials: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {// ...\n  }\n\n}","map":{"version":3,"sources":["/Users/Bakhtiyar/IdeaProjects/NewProject/news-portal-front/src/components/news-list.component.js"],"names":["React","Component","NewsDataService","Link","NewsList","constructor","props","onChangeSearchTitle","bind","retrieveNews","refreshList","setActiveTutorial","state","tutorials","currentTutorial","currentIndex","searchTitle","componentDidMount","retrieveTutorials","e","target","value","setState","TutorialDataService","getAll","then","response","data","console","log","catch","tutorial","index","removeAllTutorials","deleteAll","findByTitle","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC5CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AAEA,SAAKI,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,eAAe,EAAE,IAFR;AAGTC,MAAAA,YAAY,EAAE,CAAC,CAHN;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,iBAAL;AACH;;AAEDX,EAAAA,mBAAmB,CAACY,CAAD,EAAI;AACnB,UAAMH,WAAW,GAAGG,CAAC,CAACC,MAAF,CAASC,KAA7B;AAEA,SAAKC,QAAL,CAAc;AACVN,MAAAA,WAAW,EAAEA;AADH,KAAd;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBK,IAAAA,mBAAmB,CAACC,MAApB,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKJ,QAAL,CAAc;AACVT,QAAAA,SAAS,EAAEa,QAAQ,CAACC;AADV,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KANL,EAOKG,KAPL,CAOWX,CAAC,IAAI;AACRS,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AACH,KATL;AAUH;;AAEDT,EAAAA,WAAW,GAAG;AACV,SAAKQ,iBAAL;AACA,SAAKI,QAAL,CAAc;AACVR,MAAAA,eAAe,EAAE,IADP;AAEVC,MAAAA,YAAY,EAAE,CAAC;AAFL,KAAd;AAIH;;AAEDJ,EAAAA,iBAAiB,CAACoB,QAAD,EAAWC,KAAX,EAAkB;AAC/B,SAAKV,QAAL,CAAc;AACVR,MAAAA,eAAe,EAAEiB,QADP;AAEVhB,MAAAA,YAAY,EAAEiB;AAFJ,KAAd;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBV,IAAAA,mBAAmB,CAACW,SAApB,GACKT,IADL,CACUC,QAAQ,IAAI;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACA,WAAKjB,WAAL;AACH,KAJL,EAKKoB,KALL,CAKWX,CAAC,IAAI;AACRS,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AACH,KAPL;AAQH;;AACDH,EAAAA,WAAW,GAAG;AACVO,IAAAA,mBAAmB,CAACY,WAApB,CAAgC,KAAKvB,KAAL,CAAWI,WAA3C,EACKS,IADL,CACUC,QAAQ,IAAI;AACd,WAAKJ,QAAL,CAAc;AACVT,QAAAA,SAAS,EAAEa,QAAQ,CAACC;AADV,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KANL,EAOKG,KAPL,CAOWX,CAAC,IAAI;AACRS,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AACH,KATL;AAUH;;AAEDiB,EAAAA,MAAM,GAAG,CACL;AACH;;AAjF2C","sourcesContent":["import React, { Component } from \"react\";\nimport NewsDataService from \"../services/news.service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class NewsList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n        this.retrieveNews = this.retrieveNews.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveTutorial = this.setActiveTutorial.bind(this);\n\n        this.state = {\n            tutorials: [],\n            currentTutorial: null,\n            currentIndex: -1,\n            searchTitle: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveTutorials();\n    }\n\n    onChangeSearchTitle(e) {\n        const searchTitle = e.target.value;\n\n        this.setState({\n            searchTitle: searchTitle\n        });\n    }\n\n    retrieveTutorials() {\n        TutorialDataService.getAll()\n            .then(response => {\n                this.setState({\n                    tutorials: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveTutorials();\n        this.setState({\n            currentTutorial: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveTutorial(tutorial, index) {\n        this.setState({\n            currentTutorial: tutorial,\n            currentIndex: index\n        });\n    }\n\n    removeAllTutorials() {\n        TutorialDataService.deleteAll()\n            .then(response => {\n                console.log(response.data);\n                this.refreshList();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n    searchTitle() {\n        TutorialDataService.findByTitle(this.state.searchTitle)\n            .then(response => {\n                this.setState({\n                    tutorials: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        // ...\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}