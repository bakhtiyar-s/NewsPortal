{"ast":null,"code":"import React, { Component } from \"react\";\nimport NewsDataService from \"../services/news.service\";\nexport default class News extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeBrief = this.onChangeBrief.bind(this);\n    this.getNews = this.getNews.bind(this);\n    this.updateNews = this.updateNews.bind(this);\n    this.deleteNews = this.deleteNews.bind(this);\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: { ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentTutorial: { ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id).then(response => {\n      this.setState({\n        currentTutorial: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n    TutorialDataService.update(this.state.currentTutorial.id, data).then(response => {\n      this.setState(prevState => ({\n        currentTutorial: { ...prevState.currentTutorial,\n          published: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateTutorial() {\n    TutorialDataService.update(this.state.currentTutorial.id, this.state.currentTutorial).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The tutorial was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/tutorials');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {// ...\n  }\n\n}","map":{"version":3,"sources":["/Users/Bakhtiyar/IdeaProjects/NewProject/news-portal-front/src/components/news.component.js"],"names":["React","Component","NewsDataService","News","constructor","props","onChangeTitle","bind","onChangeBrief","getNews","updateNews","deleteNews","state","currentTutorial","id","title","description","published","message","componentDidMount","getTutorial","match","params","e","target","value","setState","prevState","onChangeDescription","TutorialDataService","get","then","response","data","console","log","catch","updatePublished","status","update","updateTutorial","deleteTutorial","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NewsDataService from \"../services/news.service\";\n\nexport default class News extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeBrief = this.onChangeBrief.bind(this);\n        this.getNews = this.getNews.bind(this);\n        this.updateNews = this.updateNews.bind(this);\n        this.deleteNews = this.deleteNews.bind(this);\n\n        this.state = {\n            currentTutorial: {\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: false\n            },\n            message: \"\"\n        };\n    }\n    componentDidMount() {\n        this.getTutorial(this.props.match.params.id);\n    }\n\n    onChangeTitle(e) {\n        const title = e.target.value;\n\n        this.setState(function(prevState) {\n            return {\n                currentTutorial: {\n                    ...prevState.currentTutorial,\n                    title: title\n                }\n            };\n        });\n    }\n\n    onChangeDescription(e) {\n        const description = e.target.value;\n\n        this.setState(prevState => ({\n            currentTutorial: {\n                ...prevState.currentTutorial,\n                description: description\n            }\n        }));\n    }\n    getTutorial(id) {\n        TutorialDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentTutorial: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updatePublished(status) {\n        var data = {\n            id: this.state.currentTutorial.id,\n            title: this.state.currentTutorial.title,\n            description: this.state.currentTutorial.description,\n            published: status\n        };\n        TutorialDataService.update(this.state.currentTutorial.id, data)\n            .then(response => {\n                this.setState(prevState => ({\n                    currentTutorial: {\n                        ...prevState.currentTutorial,\n                        published: status\n                    }\n                }));\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n    updateTutorial() {\n        TutorialDataService.update(\n            this.state.currentTutorial.id,\n            this.state.currentTutorial\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The tutorial was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteTutorial() {\n        TutorialDataService.delete(this.state.currentTutorial.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/tutorials')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        // ...\n    }\n}\n"]},"metadata":{},"sourceType":"module"}